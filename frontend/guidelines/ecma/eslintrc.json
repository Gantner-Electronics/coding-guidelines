{
    "env": {
        "browser": true,
        "es2020": true
    },
    "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended", "plugin:prettier/recommended"],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 11,
        "sourceType": "module",
        "project": "tsconfig.json"
    },
    "plugins": ["@typescript-eslint", "prettier"],
    "rules": {
        "max-classes-per-file": ["warn", 1],
        "prettier/prettier": "error",
        "arrow-body-style": "error",
        "curly": "error",
        "eol-last": "error",
        "guard-for-in": "error",
        "keyword-spacing": "error",
        "no-caller": "error",
        "no-bitwise": "error",
        "no-console": ["error", { "allow": ["debug", "info", "time", "timeEnd", "trace"] }],
        "no-new-wrappers": "error",
        "no-return-await": "off",
        "no-shadow": "error",
        "dot-notation": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-undef-init": "error",
        "no-unused-expressions": "error",
        "no-use-before-define": "error",
        "no-var": "error",
        "sort-keys": "off",
        "prefer-const": "error",
        "prefer-template": "error",
        "quotes": ["error", "single", { "allowTemplateLiterals": true }],
        "radix": ["error", "always"],
        "semi": ["error", "always"],
        "eqeqeq": "error",
        "@typescript-eslint/typedef": ["warn", { "variableDeclaration": true }],
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/explicit-member-accessibility": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/return-await": ["error", "always"],
        "@typescript-eslint/no-floating-promises": "error"
    }
}
